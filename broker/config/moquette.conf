##############################################
#  Moquette configuration file. 
#
#  The synthax is equals to mosquitto.conf
# 
##############################################

port 1884

websocket_port 8384

#*********************************************************************
# Secure Websocket port (wss)
# decommend this to enable wss
#*********************************************************************
# secure_websocket_port 8883

#*********************************************************************
# SSL tcp part
#  jks_path: define the file that contains the Java Key Store,
#            relative to the current broker home
#
#  key_store_password: is the password used to open the keystore
#
#  key_manager_password: is the password used to manage the alias in the
#            keystore
#*********************************************************************
# ssl_port 8883
#jks_path serverkeystore.jks
#key_store_password passw0rdsrv
#key_manager_password passw0rdsrv

#*********************************************************************
# The interface to bind the server
#  0.0.0.0 means "any"
#*********************************************************************
host 0.0.0.0

#*********************************************************************
# The file for the persistent store, if not specified, use just memory
# no physical persistence
#*********************************************************************
#persistent_store ./moquette_store.mapdb
#storage_class io.moquette.persistence.redis.RedisStorageService

#*********************************************************************
# acl_file:
#    defines the path to the ACL file relative to moquette home dir
#    contained in the moquette.path system property
#*********************************************************************
acl_file config/acl.conf

#*********************************************************************
# allow_anonymous is used to accept MQTT connections also from not
# authenticated clients.
#   - false to accept ONLY client connetions with credentials.
#   - true to accept client connection without credentails, validating
#       only against the password_file, the ones that provides.
#*********************************************************************
allow_anonymous false

#*********************************************************************
# password_file:
#    defines the path to the file that contains the credentials for
#    authenticated client connection. It's relative to moquette home dir
#    defined by the system property moquette.path
#*********************************************************************
#password_file config/password_file.conf


# Optional
# authenticator_class:
#      class name of the authenticator, default implementation uses
#      definitions in the password_file.conf.
#      If not specified uses FileAuthenticator
#*********************************************************************
authenticator_class io.moquette.spi.impl.security.DBAuthenticator

#*********************************************************************
# Optional Database Authentication
#*********************************************************************
authenticator.db.driver com.mysql.jdbc.Driver
authenticator.db.url jdbc:mysql://172.16.32.9:3306/moquette?user=moquette&password=8FaTAeRE
authenticator.db.query SELECT PASSWORD FROM ACCOUNT WHERE USERNAME=?
#目前的支持种类:MD5, SHA-1, SHA-256
authenticator.db.digest SHA-256

#*********************************************************************
# Optional
# authorizator_class:
#      class name of the authorizator, by default uses the
#      acl.conf.
#      If not specified uses the class: AuthorizationsCollector
#
# authorizator_class [[path to your class>]]


#*********************************************************************
# Persistence configuration
# autosave_interval:
#       interval between flushes of MapDB storage to disk. It's in
#       seconds, if not specified defaults is 30 s.
#*********************************************************************
# autosave_interval 120

#*********************************************************************
# Netty Configuration
#*********************************************************************
#
# Linux systems can use epoll instead of nio. To get a performance 
# gain and reduced GC.
# http://netty.io/wiki/native-transports.html for more information
#
#netty.epoll true

#hazelcast
#intercept.handler io.moquette.interception.HazelcastInterceptHandler

#redis storage
redis.host localhost
redis.port 6379
redis.password 
redis.database 0
redis.prefix moquette: